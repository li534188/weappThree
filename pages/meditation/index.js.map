{"version":3,"sources":["webpack:///./src/pages/meditation/index.tsx","webpack:///./src/actions/counter.js","webpack:///./src/actions/tree/tree.js","webpack:///./src/pages/meditation/index.scss","webpack:///./src/pages/meditation/index.tsx?48e0"],"names":["Index","add","parentShow","console","ReactDOM","current","React","value","Taro","url","num","show","clickAdd","title","text","dot","Component","mapStateToProps","state","mapDispatchToProps","bindActionCreators","connect","type","ADD","minus","MINUS","log","dispatch","asyncAdd","setTimeout","SHOW"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAYMA,K;;;;;AAIJ,wBAAkB;AAAA;;AAAA;;AAChB;;AADgB;;AAAA,ySAkBP,YAAK;AAAA,wBACY,MADZ;AAAA,UACPC,GADO;AAAA,UACFC,UADE;AAEdD,SAAG;AACHC,gBAAU;AArBM;;AAAA,gTAiCA,YAAI;AACpBC,aAAO,CAAPA,IAAY,gBADQ,OACpBA,EADoB,CAEpB;;AACAC,+DAAQ,CAARA,YAAqB,gBAHD,OAGpBA,EAHoB,CAIpB;AArCgB;;AAEhB,kBAAa;AACXC,aAAO,EAAE;AADE,KAAb;AAGA,mCAAiBC,4CAAK,CAAtB,SAAiBA,EAAjB;AALgB;AAMjB;;;;yCAEqB,CAAG;;;wCAEJ,CAAG;;;2CAEA,CAAG;;;uCAEP,CAAG;;;uCAEH,CAAG;;;gCAQVC,K,EAAO;AAClB,oBAAc;AACZF,eAAO,EAAEE;AADG,OAAd;AAGAC,yDAAI,CAAJA,WAAgB;AACdC,WAAG,EAAE;AADS,OAAhBD;AAGD;;;6BASS;AAAA,yBACW,KADX;AAAA,UACDE,GADC;AAAA,UACGC,IADH;AAERR,aAAO,CAAPA;AACA,0BACE,wIACE;AAAM,iBAAS,EAAC;AAAhB,sBACE,2HADF,cACE,CADF,eAEE,2HAAOO,GAAG,IAFZ,CAEE,CAFF,eAGE;AAAQ,eAAO,EAAE,KAAKE;AAAtB,SAJJ,cAII,CAHF,CADF,eAME;AAAM,iBAAS,EAAC;AAAhB,sBAGE;AAAM,oBAAY,EAAE,KAApB;AAA0C,WAAG,EAAE,KAA/C;AAA+D,iBAAS,EAAC;AAAzE,SAHF,0BAGE,CAHF,eAIE;AAAM,oBAAY,EAAE,KAApB;AAA0C,iBAAS,EAAC;AAApD,SAVJ,0BAUI,CAJF,CANF,eAYE;AACE,eAAO,EAAE,CACT;AAAEC,eAAK,EAAP;AAAiBC,cAAI,EAAE;AAAvB,SADS,EAET;AAAED,eAAK,EAAE;AAAT,SAFS,EAGT;AAAEA,eAAK,EAAP;AAAgBE,aAAG,EAAE;AAArB,SAHS,CADX;AAME,eAAO,EAAE,sBANX,IAMW,CANX;AAOE,eAAO,EAAE,WAAWV;AAPtB,QAZF,CADF;AAwBD;;;;EAvEiBW,+C;;AA4EpB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,QAAW;AACjC,SAAO;AACHP,OAAG,EAAEQ,KAAK,CAALA,gBADF;AAEHP,QAAI,EAAEO,KAAK,CAALA,aAAmBP;AAFtB,GAAP;AADF;;AAOA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,WAAc;AACvC,SAAOC,yEAAkB,0LAAzB,QAAyB,CAAzB;AADF;;AASeC,6HAAO,kBAAPA,kBAAO,CAAPA,CAAf,KAAeA,CAAf,E;;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAES,IAAMpB,GAAG,GAAG,SAANA,GAAM,GAAM;AACvB,SAAO;AACLqB,QAAI,EAAEC,8DAAGA;AADJ,GAAP;AAGD,CAJM;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACzB,SAAO;AACLF,QAAI,EAAEG,gEAAKA;AADN,GAAP;AAGD,CAJM;AAMA,IAAMvB,UAAU,GAAG,SAAbA,UAAa,GAAK;AAC3BC,SAAO,CAACuB,GAAR,CAAY,QAAZ;AACA,SAAO,UAAAC,QAAQ,EAAE;AACfA,YAAQ,CAAChB,+DAAI,EAAL,CAAR;AACD,GAFD;AAGH,CALM,C,CAOP;;AACO,SAASiB,QAAT,GAAqB;AAC1B,SAAO,UAAAD,QAAQ,EAAI;AACjBE,cAAU,CAAC,YAAM;AACfF,cAAQ,CAAC1B,GAAG,EAAJ,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;AAKD,C;;;;;;;;;;;;;AC/BH;AAAA;AAAA;AAEO,IAAMU,IAAI,GAAG,SAAPA,IAAO,GAAM;AACtB,SAAO;AACLW,QAAI,EAAEQ,iEAAIA;AADL,GAAP;AAGD,CAJI,C;;;;;;;;;;;ACFP,uC;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAkD;AACiC;AACnF,cAAc;;;AAGd,gBAAgB,wEAAgB,CAAC,iGAAS,8BAA8B,cAAc","file":"pages/meditation/index.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport Taro from '@tarojs/taro'\nimport { bindActionCreators } from 'redux';\nimport {connect} from 'react-redux'\nimport { View, Text, Navigator, Button, } from '@tarojs/components'\nimport { AtTabBar } from 'taro-ui'\nimport * as  actions from '../../actions/counter'\nimport  './index.scss'\n\nexport interface Iprops {\n  num: number,\n  add:  {(): number},\n  show: boolean,\n  parentShow: {():void}\n}\n\nexport interface Mstate{\n  current: number\n}\nclass Index extends Component<Iprops, Mstate> {\n  \n  textInput: any;\n  \n  constructor(props){\n    super(props)\n    this.state = {\n      current: 0\n    }\n    this.textInput = React.createRef();\n  }\n\n  componentWillMount () { }\n\n  componentDidMount () { }\n\n  componentWillUnmount () { }\n\n  componentDidShow () { }\n\n  componentDidHide () { }\n\n  clickAdd = () =>{\n    const {add, parentShow} = this.props;\n    add();\n    parentShow();\n  }\n\n  handleClick (value) {\n    this.setState({\n      current: value\n    })\n    Taro.navigateTo({\n      url: '/pages/hello/index'\n    })\n  }\n\n  changeClassName = ()=>{\n    console.log(this.textInput.current)\n    // document.getElementById(this.state.pre).setAttribute(\"class\", \"item\")\n    ReactDOM.findDOMNode(this.textInput.current)\n    // this.textInput.current.class = 'navigator-toch'\n  }\n\n  render () {\n    const {num,show} = this.props;\n    console.log(show);\n    return (\n      <View>\n        <View className='indexClass'>\n          <Text>首页</Text>\n          <Text>{num||1}</Text>\n          <Button onClick={this.clickAdd}>点击</Button>\n        </View>\n        <View className='nav-menu'>\n        {/* url='/pages/index/index' openType='redirect'\n        url='/pages/hello/index' openType='redirect' */}\n          <View onTouchStart={this.changeClassName} ref={this.textInput} className='navigator'  >回到首页</View>\n          <View onTouchStart={this.changeClassName} className='navigator'  >跳转页面</View>\n        </View>\n        <AtTabBar\n          tabList={[\n          { title: '待办事项', text: 8 },\n          { title: '拍照' },\n          { title: '通讯录', dot: true }\n        ]}\n          onClick={this.handleClick.bind(this)}\n          current={this.state.current}\n        />\n      </View>\n    )\n  }\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      num: state.parents.counter.num,\n      show: state.parents.tree.show\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n      {\n          ...actions\n      },\n      dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Index);\n","import {\r\n    ADD,\r\n    MINUS\r\n  } from '../constants/counter'\r\nimport{show} from './tree/tree'\r\n  \r\n  export const add = () => {\r\n    return {\r\n      type: ADD\r\n    }\r\n  }\r\n  export const minus = () => {\r\n    return {\r\n      type: MINUS\r\n    }\r\n  }\r\n\r\n  export const parentShow = () =>{\r\n      console.log('这里被调用了')\r\n      return dispatch=>{\r\n        dispatch(show())\r\n      }\r\n  }\r\n  \r\n  // 异步的 action\r\n  export function asyncAdd () {\r\n    return dispatch => {\r\n      setTimeout(() => {\r\n        dispatch(add())\r\n      }, 2000)\r\n    }\r\n  }","import {SHOW} from '../../constants/tree/tree'\r\n\r\nexport const show = () => {\r\n    return {\r\n      type: SHOW\r\n    }\r\n  }","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"首页\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/meditation/index', {}, config || {}))\n\n"],"sourceRoot":""}